name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build app image
        run: |
          docker build -t codercomo/app:latest ./app
          docker images

      - name: Build web-fe image
        run: |
          docker build -t codercomo/web-fe:latest ./web-fe
          docker images

      - name: Pull and tag redis image
        run: |
          docker pull redis:alpine
          docker tag redis:alpine codercomo/redis:latest
          docker push codercomo/redis:latest

      - name: Pull and tag mysql image
        run: |
          docker pull mysql:8.0
          docker tag mysql:8.0 codercomo/mysql:latest
          docker push codercomo/mysql:latest

  security_scan_app:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: codercomo/app:latest

  security_scan_web_fe:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: codercomo/web-fe:latest

  push_images:
    runs-on: ubuntu-latest
    needs: [security_scan_app, security_scan_web_fe]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: List Docker images
        run: docker images

      - name: Push App Image to Docker Hub
        run: docker push codercomo/app:latest

      - name: Push Web-Fe Image to Docker Hub
        run: docker push codercomo/web-fe:latest

  setup_monitoring:
    runs-on: ubuntu-latest
    needs: push_images
    steps:
      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Install Prometheus & Grafana using Helm
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace




## CREATED SIMPLIFIED VERSION BELOW FOR TESTING PURPOSES ##

# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Log in to Docker Hub
#       run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

#     - name: Build and push app image
#       run: |
#         docker build -t codercomo/app ./app
#         docker push codercomo/app

#     - name: Build and push web-fe image
#       run: |
#         docker build -t codercomo/web-fe ./web-fe
#         docker push codercomo/web-fe

#     - name: Pull and tag redis image
#       run: |
#         docker pull redis:alpine
#         docker tag redis:alpine codercomo/redis
#         docker push codercomo/redis

#     - name: Pull and tag mysql image
#       run: |
#         docker pull mysql:8.0
#         docker tag mysql:8.0 codercomo/mysql
#         docker push codercomo/mysql

#   security_scan_app:
#     runs-on: ubuntu-latest
#     needs: build-and-push

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Scan Docker image for vulnerabilities
#       uses: aquasecurity/trivy-action@master
#       with:
#         image-ref: codercomo/app:latest

#   security_scan_web_fe:
#     runs-on: ubuntu-latest
#     needs: build-and-push

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Scan Docker image for vulnerabilities
#       uses: aquasecurity/trivy-action@master
#       with:
#         image-ref: codercomo/web-fe:latest

#   # setup_monitoring:
#   #   runs-on: ubuntu-latest
#   #   needs: [security_scan_app, security_scan_web_fe]

#   #   steps:
#   #   - name: Install Helm
#   #     run: curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

#   #   - name: Install Prometheus & Grafana using Helm
#   #     run: |
#   #       helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
#   #       helm repo update
#   #       helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace
