name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Build and push the app image
      - name: Build and Push App Image
        run: |
          echo "Building and pushing app image..."
          docker build -t codercomo/app:latest ./app
          docker images | grep codercomo/app
          docker push codercomo/app:latest

      # Build and push the web-fe image
      - name: Build and Push Web-Fe Image
        run: |
          echo "Building and pushing web-fe image..."
          docker build -t codercomo/web-fe:latest ./web-fe
          docker images | grep codercomo/web-fe
          docker push codercomo/web-fe:latest

      # Pull, tag, and push the redis image
      - name: Pull, Tag, and Push Redis Image
        run: |
          docker pull redis:alpine
          docker tag redis:alpine codercomo/redis:latest
          docker push codercomo/redis:latest

      # Pull, tag, and push the mysql image
      - name: Pull, Tag, and Push MySQL Image
        run: |
          docker pull mysql:8.0
          docker tag mysql:8.0 codercomo/mysql:latest
          docker push codercomo/mysql:latest

  security_scan_app:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: codercomo/app:latest

  security_scan_web_fe:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: codercomo/web-fe:latest

  # setup_monitoring:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1  

  #     - name: Update kubeconfig for EKS
  #       run: aws eks update-kubeconfig --name mo-eks-cluster --region us-east-1

  #     - name: Install Helm
  #       run: curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

  #       # Set this up to check if the name space exists, if it does upgrade to a newer version (rather than uninstall + re-install)
  #     - name: Install or Upgrade Prometheus & Grafana using Helm
  #       run: |
  #         helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
  #         helm repo update
  #         if helm status prometheus --namespace monitoring; then
  #           helm upgrade prometheus prometheus-community/kube-prometheus-stack --namespace monitoring
  #         else
  #           helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace
  #         fi
      