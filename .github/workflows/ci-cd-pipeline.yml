name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Build and push the app image
      - name: Build and Push App Image
        run: |
          echo "Building and pushing app image..."
          docker build -t codercomo/app:latest ./app
          docker images | grep codercomo/app
          docker push codercomo/app:latest

      # Build and push the web-fe image
      - name: Build and Push Web-Fe Image
        run: |
          echo "Building and pushing web-fe image..."
          docker build -t codercomo/web-fe:latest ./web-fe
          docker images | grep codercomo/web-fe
          docker push codercomo/web-fe:latest

      # Pull, tag, and push the redis image
      - name: Pull, Tag, and Push Redis Image
        run: |
          docker pull redis:alpine
          docker tag redis:alpine codercomo/redis:latest
          docker push codercomo/redis:latest

      # Pull, tag, and push the mysql image
      - name: Pull, Tag, and Push MySQL Image
        run: |
          docker pull mysql:8.0
          docker tag mysql:8.0 codercomo/mysql:latest
          docker push codercomo/mysql:latest

      # Discord success notification step
      - name: Send Discord Notification on Success
        if: success()
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"✅ Build and push successful for branch: ${BRANCH_NAME} at ${TIMESTAMP}\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      # Discord failure notification step
      - name: Send Discord Notification on Failure
        if: failure()
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"❌ Build and push failed for branch: ${BRANCH_NAME} at ${TIMESTAMP}\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

  security_scan_app:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: codercomo/app:latest!!!!FAILURE CHECK!!!!

      # Discord success notification step
      - name: Send Discord Notification on Success
        if: success()
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"✅ Security scan successful for app image on branch: ${BRANCH_NAME} at ${TIMESTAMP}\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      # Discord failure notification step
      - name: Send Discord Notification on Failure
        if: failure()
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"❌ Security scan failed for app image on branch: ${BRANCH_NAME} at ${TIMESTAMP}\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

  security_scan_web_fe:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: codercomo/web-fe:latest

      # Discord success notification step
      - name: Send Discord Notification on Success
        if: success()
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"✅ Security scan successful for web-fe image on branch: ${BRANCH_NAME} at ${TIMESTAMP}\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      # Discord failure notification step
      - name: Send Discord Notification on Failure
        if: failure()
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"❌ Security scan failed for web-fe image on branch: ${BRANCH_NAME} at ${TIMESTAMP}\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

  kubernetes_yaml_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kube-linter
        run: |
          curl -Lo kube-linter.tar.gz https://github.com/stackrox/kube-linter/releases/download/0.2.4/kube-linter-linux.tar.gz
          tar -xzf kube-linter.tar.gz
          sudo mv kube-linter /usr/local/bin/

      - name: Run kube-linter on Kubernetes manifests
        run: |
          kube-linter lint ./k8s-manifests/ || echo "Linting issues found"

      # Discord success notification step
      - name: Send Discord Notification on Success
        if: success()
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"✅ Kubernetes YAML linting completed for branch: ${BRANCH_NAME} at ${TIMESTAMP}\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      # Discord failure notification step
      - name: Send Discord Notification on Failure
        if: failure()
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"❌ Kubernetes YAML linting failed for branch: ${BRANCH_NAME} at ${TIMESTAMP}\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
